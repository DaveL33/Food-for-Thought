{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Joseph\\\\desktop\\\\info340-code\\\\Food-for-Thought\\\\src\\\\App.js\",\"C:\\\\Users\\\\Joseph\\\\desktop\\\\info340-code\\\\Food-for-Thought\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Joseph\\\\desktop\\\\info340-code\\\\Food-for-Thought\\\\src\\\\index.js\"],\"names\":[\"App\",\"_Component\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handle\",\"state\",\"setState\",\"introComp\",\"categoryComp\",\"chosen\",\"restaurantsComp\",\"resultsComp\",\"chosenRestaurants\",\"handlePrice\",\"price\",\"console\",\"log\",\"cityName\",\"category\",\"categoryID\",\"inherits\",\"createClass\",\"key\",\"value\",\"react_default\",\"a\",\"createElement\",\"className\",\"App_Intro\",\"active\",\"priceRange\",\"data\",\"App_Category\",\"idChosen\",\"App_Restaurants\",\"restaurantsChosen\",\"App_Results\",\"Component\",\"Intro\",\"_this2\",\"handleChange\",\"_ref\",\"target\",\"fetchData\",\"fetchCityData\",\"cityID\",\"_this3\",\"length\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"user-key\",\"then\",\"response\",\"json\",\"id\",\"location_suggestions\",\"entity_id\",\"fetchCuisine\",\"catch\",\"error\",\"_this4\",\"categories\",\"i\",\"cuisines\",\"name\",\"cuisine\",\"cuisine_name\",\"cuisine_id\",\"push\",\"hidden\",\"placeholder\",\"onChange\",\"type\",\"onClick\",\"Category\",\"_this7\",\"App_CuisineList\",\"catID\",\"Card\",\"comp\",\"undefined\",\"address\",\"rating\",\"data-key\",\"CuisineList\",\"_this8\",\"event\",\"getAttribute\",\"categoryIDs\",\"send\",\"map\",\"Col\",\"xs\",\"md\",\"App_Card\",\"Grid\",\"Row\",\"Restaurants\",\"_this9\",\"handleClick\",\"currentTarget\",\"style\",\"backgroundColor\",\"eliminated\",\"restaurants\",\"range\",\"_this10\",\"list\",\"restaurantObj\",\"restaurant\",\"location\",\"price_range\",\"user_rating\",\"rating_text\",\"restaurantsDisplay\",\"fetchRestaurants\",\"Results\",\"result\",\"filter\",\"children\",\"includes\",\"index\",\"Math\",\"floor\",\"random\",\"Boolean\",\"window\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react'; //import React Component\\r\\n//import './style.css';\\r\\nimport 'whatwg-fetch';\\r\\nimport './App.css';\\r\\nimport {Grid, Row, Col} from 'react-bootstrap'\\r\\n//var rapid = new RapidAPI(\\\"default-application_5bf3605ee4b02e4415402cd8\\\", \\\"99f1d82f-be7b-42ee-9ec2-b4f3c7f8c138\\\");\\r\\nimport $ from 'jquery'; \\r\\n\\r\\nexport class App extends Component {\\r\\n\\r\\n  /*fetchData() {\\r\\n\\r\\n    \\r\\n   let url = 'https://developers.zomato.com/api/v2.1/location_details?entity_id=279&entity_type=city';\\r\\n    return fetch(url, {\\r\\n      method: 'GET',\\r\\n      headers: {\\r\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\r\\n        \\\"user-key\\\": 'd0325b0e365e86fe688a11fe58eaf786'\\r\\n      }\\r\\n    })\\r\\n    .then(function(response) {\\r\\n      return response.json();\\r\\n    })\\r\\n    .then(function(response) {\\r\\n      console.log(response);\\r\\n    })\\r\\n    .catch(function(error) {\\r\\n      console.error(error);\\r\\n    });  \\r\\n  }*/\\r\\n\\r\\n  constructor(props) {\\r\\n    super();\\r\\n    this.state = {\\r\\n      cityName:'',\\r\\n      category:[],\\r\\n      introComp:false,\\r\\n      categoryComp:true,\\r\\n      restaurantsComp:true,\\r\\n      resultsComp:true,\\r\\n      categoryID:[], \\r\\n      price:0\\r\\n    }\\r\\n  }\\r\\n\\r\\n  handle = (state) => {\\r\\n    this.setState(state);\\r\\n    this.setState({\\r\\n      introComp:true,\\r\\n      categoryComp:false\\r\\n    });\\r\\n  } \\r\\n\\r\\n  chosen = (state) => {\\r\\n    this.setState(state);\\r\\n    this.setState({\\r\\n      introComp:true,\\r\\n      categoryComp:true,\\r\\n      restaurantsComp:false,\\r\\n      resultsComp:true\\r\\n    });\\r\\n    \\r\\n  }\\r\\n\\r\\n  chosenRestaurants = (state) => {\\r\\n    this.setState(state);\\r\\n    this.setState({\\r\\n      introComp:true,\\r\\n      categoryComp:true,\\r\\n      restaurantsComp:true,\\r\\n      resultsComp:false\\r\\n    });\\r\\n  }\\r\\n\\r\\n  handlePrice = (state) => {\\r\\n    this.setState({price:state.price});\\r\\n    console.log(\\\"money\\\");\\r\\n    console.log(this.state);\\r\\n  }\\r\\n  \\r\\n  render() {\\r\\n    return (\\r\\n      <div className=\\\"bodyContainer\\\">\\r\\n        <div className=\\\"container\\\">\\r\\n          <h1 >Food for Thought</h1>\\r\\n          <Intro active={this.state.introComp} priceRange={this.handlePrice} data={this.handle}></Intro>\\r\\n          <Category idChosen={this.chosen} data={this.state} active={this.state.categoryComp}></Category>\\r\\n          <Restaurants restaurantsChosen={this.chosenRestaurants}active={this.state.restaurantsComp} data={this.state}></Restaurants>\\r\\n          <Results data={this.state} active={this.state.resultsComp}></Results>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    )\\r\\n  }\\r\\n}\\r\\n\\r\\nclass Intro extends Component {\\r\\n  constructor(props) {\\r\\n    super();\\r\\n    this.state = {\\r\\n      cityName:\\\"\\\",\\r\\n      category:[],\\r\\n      cityID:null,\\r\\n      price:0\\r\\n    }\\r\\n  }\\r\\n\\r\\n  handleChange = ({target}) => {\\r\\n    this.setState({\\r\\n      cityName:target.value\\r\\n    })\\r\\n    console.log(this.state)\\r\\n  }\\r\\n\\r\\n  fetchCityData() {\\r\\n    let cityName = this.state.cityName;\\r\\n    if(cityName.length > 0) {\\r\\n      let url = 'https://developers.zomato.com/api/v2.1/locations?query=' + cityName;\\r\\n      return fetch(url, {\\r\\n        method: 'GET',\\r\\n        headers: {\\r\\n          \\\"Content-Type\\\": \\\"application/json\\\",\\r\\n          \\\"user-key\\\": 'd0325b0e365e86fe688a11fe58eaf786'\\r\\n        }\\r\\n      })\\r\\n      .then(function(response) {\\r\\n        return response.json();\\r\\n      })\\r\\n      .then(json => {\\r\\n        let id = json.location_suggestions[0].entity_id;\\r\\n        this.setState({cityID:id});\\r\\n        this.fetchCuisine(id);\\r\\n      })\\r\\n      .catch(function(error) {\\r\\n        console.error(error);\\r\\n      });  \\r\\n    }\\r\\n  }\\r\\n\\r\\n  fetchCuisine(cityID) {\\r\\n    let url = 'https://developers.zomato.com/api/v2.1/cuisines?city_id=' + cityID;\\r\\n    return fetch(url, {\\r\\n      method: 'GET',\\r\\n      headers: {\\r\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\r\\n        \\\"user-key\\\": 'd0325b0e365e86fe688a11fe58eaf786'\\r\\n      }\\r\\n    })\\r\\n    .then(function(response) {\\r\\n      return response.json();\\r\\n    })\\r\\n    .then(json => {\\r\\n      let categories = [];\\r\\n      for(let i = 0; i < json.cuisines.length; i++) {\\r\\n        let category = {\\r\\n          name:json.cuisines[i].cuisine.cuisine_name,\\r\\n          id:json.cuisines[i].cuisine.cuisine_id\\r\\n        };\\r\\n        categories.push(category);\\r\\n      }\\r\\n      this.setState({category:categories});\\r\\n      this.props.data(this.state)\\r\\n      return json;\\r\\n    })\\r\\n    .catch(function(error) {\\r\\n      console.error(error);\\r\\n    });\\r\\n  }\\r\\n\\r\\n  fetchData = () => {\\r\\n    this.fetchCityData()\\r\\n  }\\r\\n\\r\\n  handlePrice = (state) => {\\r\\n    this.setState({price:state.price});\\r\\n    this.props.priceRange(this.state);\\r\\n  };\\r\\n\\r\\n  render() {\\r\\n    return(\\r\\n      <div hidden={this.props.active} className=\\\"introContainer\\\">\\r\\n        <div className=\\\"introContent\\\">\\r\\n          <h5><strong>Food for Thoughts</strong> is an app that helps users decide what restaurant to eat at.</h5>\\r\\n          <p>Input your city name below to get started!</p>\\r\\n        </div>\\r\\n        <div className=\\\"zipMoney\\\">\\r\\n          <div className=\\\"zipCode\\\">\\r\\n            <input placeholder=\\\"Enter city name\\\" onChange={this.handleChange} type=\\\"textarea\\\"/>\\r\\n            <label>City Name</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div className=\\\"footer\\\">\\r\\n          <div onClick={this.fetchData} className=\\\"arrowSubmit\\\">\\r\\n            >>>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nclass Price extends Component {\\r\\n  constructor(props) {\\r\\n    super();\\r\\n    let list = this.setRange();\\r\\n    this.state = {\\r\\n      range:list,\\r\\n      price:0\\r\\n    }\\r\\n  }\\r\\n\\r\\n  highlight = (event) => {\\r\\n    let price = parseInt(event.target.id);\\r\\n    this.setState({price:price});\\r\\n    this.props.priceRange(this.state);\\r\\n  }\\r\\n\\r\\n  componentDidMount() {\\r\\n  }\\r\\n\\r\\n  setRange() {\\r\\n    let temp = ['$', '$', '$'];\\r\\n    let counter = 1;\\r\\n    let list = temp.map(symbol => {\\r\\n      let comp = <span onClick={this.highlight} id={counter} className=\\\"dollar\\\">{symbol}</span>;\\r\\n      counter++;\\r\\n      return comp;\\r\\n    });\\r\\n    return list;\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n\\r\\n    return(\\r\\n      <div className=\\\"money\\\">\\r\\n        {this.state.range}\\r\\n        <label>Price Range</label>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nclass Category extends Component {\\r\\n  constructor(props) {\\r\\n    super();\\r\\n    this.state = {\\r\\n      categoryID:[]\\r\\n    }\\r\\n  }\\r\\n\\r\\n  handle = (id) => {\\r\\n    this.state.categoryID.push(id);\\r\\n    console.log(\\\"donut\\\");\\r\\n    console.log(this.state);\\r\\n    this.props.idChosen(this.state);\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    let data = this.props.data;\\r\\n    console.log(data)\\r\\n    return (\\r\\n      <div className=\\\"categoryContainer\\\" hidden={this.props.active}>\\r\\n        <div>\\r\\n          <h5>To fetch accurate restaurants that match your cravings, we'll need you to answer a few questions.</h5>\\r\\n          <p>Select your preferred category below.</p>\\r\\n        </div>\\r\\n        <CuisineList catID={this.handle} data={data}></CuisineList>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nclass Card extends Component {\\r\\n  constructor(props) {\\r\\n    super();\\r\\n  }\\r\\n  render() {\\r\\n    let category = this.props.category;\\r\\n    let comp;\\r\\n    if(category.address != undefined) {\\r\\n      comp = <div className=\\\"info\\\">\\r\\n        <h6>{category.address}</h6>\\r\\n        <h6>{category.rating}</h6>\\r\\n        <h6>{category.price}</h6>\\r\\n      </div>\\r\\n    }\\r\\n    return(\\r\\n      <div onClick={this.props.onClick} data-key={category.id} className=\\\"categoryCard\\\">\\r\\n        <h5 className=\\\"categoryName\\\">\\r\\n          {category.name}\\r\\n        </h5>\\r\\n        {comp}\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nclass CuisineList extends Component {\\r\\n  constructor(props) {\\r\\n    super();\\r\\n    this.state = {\\r\\n      categoryIDs:[]\\r\\n    }\\r\\n  }\\r\\n\\r\\n  chosen = (event) => {\\r\\n    let id = event.target.getAttribute(\\\"data-key\\\");\\r\\n    this.state.categoryIDs.push(id);\\r\\n  }\\r\\n\\r\\n  send = () => {\\r\\n    console.log(\\\"sent\\\");\\r\\n    console.log(this.state.categoryIDs);\\r\\n    this.props.catID(this.state.categoryIDs);\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    let data = this.props.data.category;\\r\\n    console.log(data);\\r\\n    let categories = data.map(category => {\\r\\n      let comp = \\r\\n          <Col xs={12} md={3}>\\r\\n            <Card category={category}></Card>\\r\\n          </Col>\\r\\n      \\r\\n      return comp;\\r\\n    });\\r\\n    return(\\r\\n      <div>\\r\\n        <div onClick={this.send} className=\\\"arrowSubmit\\\">\\r\\n          >>>\\r\\n        </div>\\r\\n        <div onClick={this.chosen}>\\r\\n          <Grid>\\r\\n            <Row>\\r\\n\\r\\n            </Row>\\r\\n          </Grid>\\r\\n          {categories}\\r\\n        </div>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nclass Restaurants extends Component {\\r\\n  constructor(props) {\\r\\n    super();\\r\\n    this.state = {\\r\\n      restaurants:null,\\r\\n      eliminated:[]\\r\\n    }\\r\\n  }\\r\\n\\r\\n  handleClick = (event) => {\\r\\n    console.log(event);\\r\\n    console.log(event.currentTarget);\\r\\n    event.target.style.backgroundColor = \\\"#f39c12\\\";\\r\\n    this.state.eliminated.push(event.currentTarget.getAttribute(\\\"data-key\\\"));\\r\\n  };\\r\\n\\r\\n  send = () => {\\r\\n    this.props.restaurantsChosen(this.state);\\r\\n  }\\r\\n\\r\\n  fetchRestaurants(categoryIDs, cityID, range) {\\r\\n    if(categoryIDs != undefined && categoryIDs.length > 0) {\\r\\n      let catID = categoryIDs[0];\\r\\n      for(let i = 1; i < categoryIDs.length; i++) {\\r\\n        catID += '%2C%20' + categoryIDs[i];\\r\\n      }\\r\\n      let url = 'https://developers.zomato.com/api/v2.1/search?entity_id=' + cityID + '&entity_type=city&cuisines=' + catID + '&order=asc';\\r\\n      return fetch(url, {\\r\\n        method: 'GET',\\r\\n        headers: {\\r\\n          \\\"Content-Type\\\": \\\"application/json\\\",\\r\\n          \\\"user-key\\\": 'd0325b0e365e86fe688a11fe58eaf786'\\r\\n        }\\r\\n      })\\r\\n      .then(function(response) {\\r\\n        return response.json();\\r\\n      })\\r\\n      .then(json => {\\r\\n        let restaurants = json.restaurants;\\r\\n        let list = restaurants.map(restaurantObj => {\\r\\n          let restaurant = restaurantObj.restaurant;\\r\\n          let category = {\\r\\n            name:restaurant.name,\\r\\n            id:restaurant.id,\\r\\n            address:restaurant.location.address,\\r\\n            price:restaurant.price_range,\\r\\n            rating:restaurant.user_rating.rating_text\\r\\n          }\\r\\n          let comp = <Col xs={12} md={3}>\\r\\n            <Card onClick={this.handleClick} category={category}></Card>\\r\\n          </Col>\\r\\n          return comp;\\r\\n        })\\r\\n        /*\\r\\n        list = list.filter(obj => {\\r\\n          return obj.props.category.price == range;\\r\\n        });*/\\r\\n        this.setState({restaurants:list});\\r\\n        return list;\\r\\n      })\\r\\n      .catch(function(error) {\\r\\n        console.error(error);\\r\\n      });  \\r\\n    }\\r\\n  }\\r\\n\\r\\n  componentDidMount() {\\r\\n    \\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    let data = this.props.data;\\r\\n    let categoryIDs = data.categoryID;\\r\\n    let range = data.price;\\r\\n    let cityID = this.props.data.cityID;\\r\\n    this.fetchRestaurants(categoryIDs[0], cityID, range);\\r\\n    let restaurantsDisplay;\\r\\n    if(this.state.restaurants != null) {\\r\\n      restaurantsDisplay = this.state.restaurants;\\r\\n    }\\r\\n    return(\\r\\n      <div className=\\\"restaurantContainer\\\" hidden={this.props.active}>\\r\\n        <div>\\r\\n          <h5>To fetch accurate restaurants that match your cravings, we'll need you to answer a few questions.</h5>\\r\\n          <p>Eliminate two restaurants from below.</p>\\r\\n        </div>\\r\\n          <Row>\\r\\n            {restaurantsDisplay}\\r\\n          </Row>\\r\\n          <Row>\\r\\n            <div onClick={this.send} className=\\\"arrowSubmit\\\">\\r\\n              >>>\\r\\n            </div>\\r\\n          </Row>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nclass Results extends Component {\\r\\n  constructor(props) {\\r\\n    super();\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    let data = this.props.data;\\r\\n    console.log(data);\\r\\n    let result;\\r\\n    if(data.restaurants != undefined) {\\r\\n      let eliminated = data.eliminated;\\r\\n      let restaurants = data.restaurants.filter(restaurant => {\\r\\n        let id = restaurant.props.children.props.category.id;\\r\\n        return eliminated.includes(id) == false\\r\\n      })\\r\\n      let index = Math.floor(Math.random() * restaurants.length);\\r\\n      console.log(\\\"carrot\\\");\\r\\n      console.log(restaurants[index]);\\r\\n      console.log(restaurants[index].props);\\r\\n      result = <div><h6>Based off your preferences, this is the most ideal restaurant for you!</h6>\\r\\n      <Card category={restaurants[index].props.children.props.category}></Card></div>\\r\\n    }\\r\\n    \\r\\n    return(\\r\\n      <div className=\\\"resultContent\\\">\\r\\n        {result}\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default App;\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read http://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\n\\r\\nReactDOM.render(<App />, document.getElementById('root'));\\r\\n\\r\\n// If you want your app to work offline and load faster, you can change\\r\\n// unregister() to register() below. Note this comes with some pitfalls.\\r\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\r\\nserviceWorker.unregister();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{40:function(e,t,a){e.exports=a(85)},45:function(e,t,a){},48:function(e,t,a){},85:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),o=a(35),c=a.n(o),s=(a(45),a(4)),i=a(5),l=a(7),u=a(6),h=a(8),m=(a(47),a(48),a(87)),d=a(88),p=a(89),f=(a(50),function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this))).handle=function(e){a.setState(e),a.setState({introComp:!0,categoryComp:!1})},a.chosen=function(e){a.setState(e),a.setState({introComp:!0,categoryComp:!0,restaurantsComp:!1,resultsComp:!0})},a.chosenRestaurants=function(e){a.setState(e),a.setState({introComp:!0,categoryComp:!0,restaurantsComp:!0,resultsComp:!1})},a.handlePrice=function(e){a.setState({price:e.price}),console.log(\"money\"),console.log(a.state)},a.state={cityName:\"\",category:[],introComp:!1,categoryComp:!0,restaurantsComp:!0,resultsComp:!0,categoryID:[],price:0},a}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"bodyContainer\"},r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"h1\",null,\"Food for Thought\"),r.a.createElement(y,{active:this.state.introComp,priceRange:this.handlePrice,data:this.handle}),r.a.createElement(v,{idChosen:this.chosen,data:this.state,active:this.state.categoryComp}),r.a.createElement(E,{restaurantsChosen:this.chosenRestaurants,active:this.state.restaurantsComp,data:this.state}),r.a.createElement(b,{data:this.state,active:this.state.resultsComp})))}}]),t}(n.Component)),y=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this))).handleChange=function(e){var t=e.target;a.setState({cityName:t.value}),console.log(a.state)},a.fetchData=function(){a.fetchCityData()},a.handlePrice=function(e){a.setState({price:e.price}),a.props.priceRange(a.state)},a.state={cityName:\"\",category:[],cityID:null,price:0},a}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"fetchCityData\",value:function(){var e=this,t=this.state.cityName;if(t.length>0)return fetch(\"https://developers.zomato.com/api/v2.1/locations?query=\"+t,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"user-key\":\"d0325b0e365e86fe688a11fe58eaf786\"}}).then(function(e){return e.json()}).then(function(t){var a=t.location_suggestions[0].entity_id;e.setState({cityID:a}),e.fetchCuisine(a)}).catch(function(e){console.error(e)})}},{key:\"fetchCuisine\",value:function(e){var t=this;return fetch(\"https://developers.zomato.com/api/v2.1/cuisines?city_id=\"+e,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"user-key\":\"d0325b0e365e86fe688a11fe58eaf786\"}}).then(function(e){return e.json()}).then(function(e){for(var a=[],n=0;n<e.cuisines.length;n++){var r={name:e.cuisines[n].cuisine.cuisine_name,id:e.cuisines[n].cuisine.cuisine_id};a.push(r)}return t.setState({category:a}),t.props.data(t.state),e}).catch(function(e){console.error(e)})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{hidden:this.props.active,className:\"introContainer\"},r.a.createElement(\"div\",{className:\"introContent\"},r.a.createElement(\"h5\",null,r.a.createElement(\"strong\",null,\"Food for Thoughts\"),\" is an app that helps users decide what restaurant to eat at.\"),r.a.createElement(\"p\",null,\"Input your city name below to get started!\")),r.a.createElement(\"div\",{className:\"zipMoney\"},r.a.createElement(\"div\",{className:\"zipCode\"},r.a.createElement(\"input\",{placeholder:\"Enter city name\",onChange:this.handleChange,type:\"textarea\"}),r.a.createElement(\"label\",null,\"City Name\"))),r.a.createElement(\"div\",{className:\"footer\"},r.a.createElement(\"div\",{onClick:this.fetchData,className:\"arrowSubmit\"},\">>>\")))}}]),t}(n.Component),v=(n.Component,function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this))).handle=function(e){a.state.categoryID.push(e),console.log(\"donut\"),console.log(a.state),a.props.idChosen(a.state)},a.state={categoryID:[]},a}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this.props.data;return console.log(e),r.a.createElement(\"div\",{className:\"categoryContainer\",hidden:this.props.active},r.a.createElement(\"div\",null,r.a.createElement(\"h5\",null,\"To fetch accurate restaurants that match your cravings, we'll need you to answer a few questions.\"),r.a.createElement(\"p\",null,\"Select your preferred category below.\")),r.a.createElement(C,{catID:this.handle,data:e}))}}]),t}(n.Component)),g=function(e){function t(e){return Object(s.a)(this,t),Object(l.a)(this,Object(u.a)(t).call(this))}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e,t=this.props.category;return void 0!=t.address&&(e=r.a.createElement(\"div\",{className:\"info\"},r.a.createElement(\"h6\",null,t.address),r.a.createElement(\"h6\",null,t.rating),r.a.createElement(\"h6\",null,t.price))),r.a.createElement(\"div\",{onClick:this.props.onClick,\"data-key\":t.id,className:\"categoryCard\"},r.a.createElement(\"h5\",{className:\"categoryName\"},t.name),e)}}]),t}(n.Component),C=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this))).chosen=function(e){var t=e.target.getAttribute(\"data-key\");a.state.categoryIDs.push(t)},a.send=function(){console.log(\"sent\"),console.log(a.state.categoryIDs),a.props.catID(a.state.categoryIDs)},a.state={categoryIDs:[]},a}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this.props.data.category;console.log(e);var t=e.map(function(e){return r.a.createElement(m.a,{xs:12,md:3},r.a.createElement(g,{category:e}))});return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{onClick:this.send,className:\"arrowSubmit\"},\">>>\"),r.a.createElement(\"div\",{onClick:this.chosen},r.a.createElement(d.a,null,r.a.createElement(p.a,null)),t))}}]),t}(n.Component),E=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this))).handleClick=function(e){console.log(e),console.log(e.currentTarget),e.target.style.backgroundColor=\"#f39c12\",a.state.eliminated.push(e.currentTarget.getAttribute(\"data-key\"))},a.send=function(){a.props.restaurantsChosen(a.state)},a.state={restaurants:null,eliminated:[]},a}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"fetchRestaurants\",value:function(e,t,a){var n=this;if(void 0!=e&&e.length>0){for(var o=e[0],c=1;c<e.length;c++)o+=\"%2C%20\"+e[c];return fetch(\"https://developers.zomato.com/api/v2.1/search?entity_id=\"+t+\"&entity_type=city&cuisines=\"+o+\"&order=asc\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"user-key\":\"d0325b0e365e86fe688a11fe58eaf786\"}}).then(function(e){return e.json()}).then(function(e){var t=e.restaurants.map(function(e){var t=e.restaurant,a={name:t.name,id:t.id,address:t.location.address,price:t.price_range,rating:t.user_rating.rating_text};return r.a.createElement(m.a,{xs:12,md:3},r.a.createElement(g,{onClick:n.handleClick,category:a}))});return n.setState({restaurants:t}),t}).catch(function(e){console.error(e)})}}},{key:\"componentDidMount\",value:function(){}},{key:\"render\",value:function(){var e,t=this.props.data,a=t.categoryID,n=t.price,o=this.props.data.cityID;return this.fetchRestaurants(a[0],o,n),null!=this.state.restaurants&&(e=this.state.restaurants),r.a.createElement(\"div\",{className:\"restaurantContainer\",hidden:this.props.active},r.a.createElement(\"div\",null,r.a.createElement(\"h5\",null,\"To fetch accurate restaurants that match your cravings, we'll need you to answer a few questions.\"),r.a.createElement(\"p\",null,\"Eliminate two restaurants from below.\")),r.a.createElement(p.a,null,e),r.a.createElement(p.a,null,r.a.createElement(\"div\",{onClick:this.send,className:\"arrowSubmit\"},\">>>\")))}}]),t}(n.Component),b=function(e){function t(e){return Object(s.a)(this,t),Object(l.a)(this,Object(u.a)(t).call(this))}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e,t=this.props.data;if(console.log(t),void 0!=t.restaurants){var a=t.eliminated,n=t.restaurants.filter(function(e){var t=e.props.children.props.category.id;return 0==a.includes(t)}),o=Math.floor(Math.random()*n.length);console.log(\"carrot\"),console.log(n[o]),console.log(n[o].props),e=r.a.createElement(\"div\",null,r.a.createElement(\"h6\",null,\"Based off your preferences, this is the most ideal restaurant for you!\"),r.a.createElement(g,{category:n[o].props.children.props.category}))}return r.a.createElement(\"div\",{className:\"resultContent\"},e)}}]),t}(n.Component),j=f;Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(j,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[40,2,1]]]);","extractedComments":[]}